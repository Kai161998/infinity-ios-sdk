<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/WTOptimizeManager.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/WTOptimizeManager</TokenIdentifier>
			<Abstract type="html">WTOptimizeManager is the central class provided by OptimizeSDK. Its central purpose is to orchestrate optimization tests and report conversions to the Optimize data collection servers. It&apos;s primarily accessed through its sharedCollector singleton. It should not be manually initialized.</Abstract>
			<DeclaredIn>WTOptimizeManager.h</DeclaredIn>
            
			
			<NodeRef refid="28"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/WTOptimizeManager/sharedManager</TokenIdentifier>
			<Abstract type="html">The singleton Optimize manager object used to access all Optimize SDK functionality.</Abstract>
			<DeclaredIn>WTOptimizeManager.h</DeclaredIn>
			
			<Declaration>+ (instancetype _Nonnull)sharedManager</Declaration>
			
			<ReturnValue><Abstract type="html">WTOptimizeManager singleton object</Abstract></ReturnValue>
			<Anchor>//api/name/sharedManager</Anchor>
            <NodeRef refid="28"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WTOptimizeManager/optimizeFactorForIdentifier:</TokenIdentifier>
			<Abstract type="html">Retrieve an Optimize test factor from the local collection of tests.</Abstract>
			<DeclaredIn>WTOptimizeManager.h</DeclaredIn>
			
			<Declaration>- (WTOptimizeFactor *_Nullable)optimizeFactorForIdentifier:(NSString *_Nonnull)identifier</Declaration>
			<Parameters>
				<Parameter>
					<Name>identifier</Name>
					<Abstract type="html">The identifier associated with this factor</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The Optimize factor with the identifier</Abstract></ReturnValue>
			<Anchor>//api/name/optimizeFactorForIdentifier:</Anchor>
            <NodeRef refid="28"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WTOptimizeManager/projectCount</TokenIdentifier>
			<Abstract type="html">The number of projects stored locally</Abstract>
			<DeclaredIn>WTOptimizeManager.h</DeclaredIn>
			
			<Declaration>- (int64_t)projectCount</Declaration>
			
			<ReturnValue><Abstract type="html">the number of projects stored in the local database</Abstract></ReturnValue>
			<Anchor>//api/name/projectCount</Anchor>
            <NodeRef refid="28"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WTOptimizeManager/testCount</TokenIdentifier>
			<Abstract type="html">The number of tests stored locally</Abstract>
			<DeclaredIn>WTOptimizeManager.h</DeclaredIn>
			
			<Declaration>- (int64_t)testCount</Declaration>
			
			<ReturnValue><Abstract type="html">the number of tests stored in the local database</Abstract></ReturnValue>
			<Anchor>//api/name/testCount</Anchor>
            <NodeRef refid="28"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WTOptimizeManager/factorCount</TokenIdentifier>
			<Abstract type="html">The number of factors stored locally</Abstract>
			<DeclaredIn>WTOptimizeManager.h</DeclaredIn>
			
			<Declaration>- (int64_t)factorCount</Declaration>
			
			<ReturnValue><Abstract type="html">the number of factors stored in the local database</Abstract></ReturnValue>
			<Anchor>//api/name/factorCount</Anchor>
            <NodeRef refid="28"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WTOptimizeManager/triggerPageView:withTestAlias:projectLocation:</TokenIdentifier>
			<Abstract type="html">Create a page view that will be associated with an existing test alias and project</Abstract>
			<DeclaredIn>WTOptimizeManager.h</DeclaredIn>
			
			<Declaration>- (NSDictionary *_Nullable)triggerPageView:(id _Nonnull)page withTestAlias:(NSString *_Nonnull)testAlias projectLocation:(NSString *_Nonnull)projectLocation</Declaration>
			<Parameters>
				<Parameter>
					<Name>page</Name>
					<Abstract type="html">Usually self, but may be any object.</Abstract>
				</Parameter><Parameter>
					<Name>testAlias</Name>
					<Abstract type="html">The test alias associated with this page view</Abstract>
				</Parameter><Parameter>
					<Name>projectLocation</Name>
					<Abstract type="html">The project location associated with this page view</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">a Page View event. It is not necessary to use the return value. The event will automatically be sent to the collection servers during the next event send.</Abstract></ReturnValue>
			<Anchor>//api/name/triggerPageView:withTestAlias:projectLocation:</Anchor>
            <NodeRef refid="28"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WTOptimizeManager/triggerEventForConversionWithTestAlias:projectLocation:conversionPoint:</TokenIdentifier>
			<Abstract type="html">Triggers a conversion event to be created</Abstract>
			<DeclaredIn>WTOptimizeManager.h</DeclaredIn>
			
			<Declaration>- (NSDictionary *_Nullable)triggerEventForConversionWithTestAlias:(NSString *_Nonnull)testAlias projectLocation:(NSString *_Nonnull)projectLocation conversionPoint:(NSString *_Nonnull)conversionPoint</Declaration>
			<Parameters>
				<Parameter>
					<Name>testAlias</Name>
					<Abstract type="html">The test alias associated with this conversion</Abstract>
				</Parameter><Parameter>
					<Name>projectLocation</Name>
					<Abstract type="html">The project location associated with this conversion</Abstract>
				</Parameter><Parameter>
					<Name>conversionPoint</Name>
					<Abstract type="html">The conversion point associated with this conversion</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">a conversion event (as an NSDictionary). It is not necessary to use the return value. The event will automatically be sent to the collection servers during the next event send.</Abstract></ReturnValue>
			<Anchor>//api/name/triggerEventForConversionWithTestAlias:projectLocation:conversionPoint:</Anchor>
            <NodeRef refid="28"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WTOptimizeManager/triggerPageViewEnd</TokenIdentifier>
			<Abstract type="html">Mark the current page view as completed, so that subsequent calls to triggerPageView:withTestAlias:projectLocation will cause an additional page view to be tracked rather than ignored. This method is optional.</Abstract>
			<DeclaredIn>WTOptimizeManager.h</DeclaredIn>
			
			<Declaration>- (void)triggerPageViewEnd</Declaration>
			
			
			<Anchor>//api/name/triggerPageViewEnd</Anchor>
            <NodeRef refid="28"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WTOptimizeManager/fetchTestLocation:customData:completion:</TokenIdentifier>
			<Abstract type="html">Fetch the test at a given location. Useful for tests that aren&apos;t permenantly cacheable, because they require in-the-moment data. Generally implemented with some sort of UI-blocking to prevent a content flash after the download has finished.</Abstract>
			<DeclaredIn>WTOptimizeManager.h</DeclaredIn>
			
			<Declaration>- (void)fetchTestLocation:(NSString *_Nonnull)location customData:(NSDictionary *_Nullable)data completion:(void ( ^ _Nullable ) ( NSArray&lt;WTOptimizeTest*&gt; *_Nullable tests , NSError *_Nullable error ))completion</Declaration>
			<Parameters>
				<Parameter>
					<Name>location</Name>
					<Abstract type="html">The project location to search for</Abstract>
				</Parameter><Parameter>
					<Name>completion</Name>
					<Abstract type="html">Once fetched, returns an array of tests that match the given location</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/fetchTestLocation:customData:completion:</Anchor>
            <NodeRef refid="28"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WTOptimizeManager/synchronizeSessionWithWebView:</TokenIdentifier>
			<Abstract type="html">Get cookie data from the SDK and send it to the webView&apos;s cookie storage</Abstract>
			<DeclaredIn>WTOptimizeManager.h</DeclaredIn>
			
			<Declaration>- (void)synchronizeSessionWithWebView:(id _Nonnull)webView</Declaration>
			<Parameters>
				<Parameter>
					<Name>webView</Name>
					<Abstract type="html">a UIWebView or WKWebView (or subclass) object</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/synchronizeSessionWithWebView:</Anchor>
            <NodeRef refid="28"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WTOptimizeManager/flushTestCache</TokenIdentifier>
			<Abstract type="html">If the SDK is in staging mode, flush all tests ands cookies currently cached in the system. Useful for active test development and debugging.</Abstract>
			<DeclaredIn>WTOptimizeManager.h</DeclaredIn>
			
			<Declaration>- (void)flushTestCache</Declaration>
			
			
			<Anchor>//api/name/flushTestCache</Anchor>
            <NodeRef refid="28"/>
		</Token>
		
        
        
	</File>
</Tokens>